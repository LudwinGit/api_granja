version: "3.7"
services:
    main:
        container_name: api
        restart: always
        image: ludwin/api-granja
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        command: npm run start:dev
        env_file:
            - .env
        networks:
            - webnet
        depends_on:
            - database

    database:
        container_name: db
        image: postgres:12.3-alpine 
        restart: always
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB_NAME}
            PG_DATA: /var/lib/postgresql/data
            TZ: 'America/Guatemala'
        ports:
            - ${DB_LISTEN_PORT_OUT}:${DB_PORT}
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - webnet
networks:
  webnet:
volumes:
  pgdata:

# version: "3.7"

# services:
#     main:
#         container_name: api
#         restart: always
#         build:
#             context: .
#             target: development
#         volumes:
#             - .:/usr/src/app
#             - /usr/src/app/node_modules
#         ports:
#             - ${SERVER_PORT}:${SERVER_PORT}
#         command: npm run start:dev
#         env_file:
#             - .env
#         networks:
#             - webnet
#         depends_on:
#             - database

#     database:
#         container_name: db
#         image: postgres:12.3-alpine 
#         restart: always
#         environment:
#             POSTGRES_PASSWORD: ${DB_PASSWORD}
#             POSTGRES_USER: ${DB_USER}
#             POSTGRES_DB: ${DB_NAME}
#             PG_DATA: /var/lib/postgresql/data
#             TZ: 'America/Guatemala'
#         ports:
#             - ${DB_LISTEN_PORT_OUT}:${DB_PORT}
#         volumes:
#             - pgdata:/var/lib/postgresql/data
#         networks:
#             - webnet
# networks:
#   webnet:
# volumes:
#   pgdata:
